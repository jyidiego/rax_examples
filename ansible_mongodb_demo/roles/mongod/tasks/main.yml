---
# This role deploys the mongod processes and sets up the replication set.

- name: create data directory for mongodb
  file: path={{ mongodb_datadir_prefix }}/mongo-{{ inventory_hostname }} state=directory owner=mongod group=mongod
  delegate_to: '{{ item }}'
  with_items: groups.replication_servers
  
- name: Create the mongodb startup file
  template: src=mongod.j2 dest=/etc/init.d/mongod-{{ inventory_hostname }} mode=0655
  delegate_to: '{{ item }}'
  with_items: groups.replication_servers
  when: item == inventory_hostname

- name: Create the mongodb configuration file
  template: src=mongod.conf.j2 dest=/etc/mongod-${inventory_hostname}.conf
  delegate_to: '{{ item }}'
  with_items: groups.replication_servers
  when: item == inventory_hostname

- name: Set permission on mongodb configuration file
  file: path=/etc/mongod-${inventory_hostname}.conf mode=0644
  delegate_to: '{{ item }}'
  with_items: groups.replication_servers
  when: item == inventory_hostname

- name: Copy the keyfile for authentication
  copy: src=secret dest={{ mongodb_datadir_prefix }}/secret owner=mongod group=mongod mode=0400

- name: Start the mongodb service
  command: creates=/var/lock/subsys/mongod-${inventory_hostname} /etc/init.d/mongod-${inventory_hostname} start
  delegate_to: '{{ item }}'
  with_items: groups.replication_servers
  when: item == inventory_hostname

- name: Setup firewall rules
  command: /sbin/iptables -I INPUT 1 -p tcp  --dport "{{ mongod_port }}" -s "{{ item }}" -j ACCEPT
  with_items: groups.replication_servers
  when: item != inventory_hostname

